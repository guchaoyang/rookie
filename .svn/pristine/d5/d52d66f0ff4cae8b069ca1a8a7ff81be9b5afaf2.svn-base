//
//  MainViewController.m
//  shopping
//
//  Created by 成都牛牛优选信息科技有限公司 on 2017/12/7.
//  Copyright © 2017年 成都牛牛优选信息科技有限公司. All rights reserved.
//

#import "MainViewController.h"

#import "SDCycleScrollView.h"

#import "HomeTableViewCell.h"

#import "GoodsDetailViewController.h"

#import "PostFreeViewController.h"//9.9包邮

#import "HotSaleViewController.h"//榜单界面

#import "AllSummaryViewController.h"//全网汇总

#import "HomeListModel.h"

#import "H5RecordPage.h"

#import "UpdateApp.h"

#import "SELUpdateAlert.h"//

@interface MainViewController ()<SDCycleScrollViewDelegate, UITableViewDataSource, UITableViewDelegate, ReloadNetworkDelegate>
{
    NSInteger _pageNum;//页数
}
@property(nonatomic, strong)SDCycleScrollView  *imgScroll;//轮播

@property(nonatomic, strong)UIScrollView       *scrollView;

@property(nonatomic, strong)NSMutableArray     *imagesArray; // 轮播图片数组

@property(nonatomic, strong)NSMutableArray     *bannerArray; // 轮播数组

@property(nonatomic, strong)UITableView        *tableView;

@property(nonatomic, strong)NSMutableArray     *goodsArray; // 商品数组


@end

@implementation MainViewController
    
- (void)viewWillAppear:(BOOL)animated{
    
    [super viewWillAppear:animated];
    
    [_imgScroll adjustWhenControllerViewWillAppera];//解决viewWillAppear时出现时轮播图卡在一半的问题
}

- (void)viewDidLoad {
    [super viewDidLoad];

    self.automaticallyAdjustsScrollViewInsets = YES;
    self.edgesForExtendedLayout = UIRectEdgeNone;
    
    self.view.backgroundColor = customColor(@"f0f0f0");
    _pageNum = 1;
   
    [self layoutView];
    
    [self postUmengDeviceTokenRequest];//发送友盟设备信息

    [self checkVersionUpdate];//检查版本更新
    
    [KNotificationCenter addObserver:self selector:@selector(pushInfoNotification:) name:PUSH_POSTINFO object:nil];
}

- (void)layoutView{
    
    __weak typeof(self) weakSelf = self;//防止循环引用
    
    //轮播图创建
    _imgScroll = [SDCycleScrollView cycleScrollViewWithFrame:CGRectMake(0, 0, Screen_Width, 120*SProportion_Height) delegate:self placeholderImage:image(@"")];
    _imgScroll.currentPageDotColor = [UIColor redColor];
    _imgScroll.pageDotColor = BackgroundColor;
    _imgScroll.pageControlAliment = SDCycleScrollViewPageContolAlimentCenter;
    _imgScroll.autoScrollTimeInterval = 3;
    _imgScroll.placeholderImage = image(@"home_img_baner_plaHolder");
    _imgScroll.pageControlDotSize = CGSizeMake(20, 3);
    _imgScroll.imageURLStringsGroup = self.imagesArray;
    [self.scrollView addSubview:_imgScroll];
    
    //4个按钮底层背景
    UIView *fourBtnView = [[UIView alloc] init];
    fourBtnView.backgroundColor = [UIColor whiteColor];
    [self.scrollView addSubview:fourBtnView];
    
    [fourBtnView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.and.right.equalTo(weakSelf.view);
        make.top.equalTo(_imgScroll.mas_bottom);
        make.height.mas_equalTo(70*SProportion_Height);
    }];
    
    NSArray *titles = @[@"9.9包邮",@"榜单",@"全网汇总",@"精选推送"];
    NSArray *myimages = @[@"home_btn_packagemail",@"home_btn_sale",@"home_btn_summary",@"home_btn_selectPush"];
    
    for (int i = 0 ; i < titles.count; i ++) {
        
        UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];
        button.tag = 10+i;
        [button setImage:[UIImage imageNamed:[myimages objectAtIndex:i]] forState:UIControlStateNormal];
        [button addTarget:self action:@selector(fourBtnClick:) forControlEvents:UIControlEventTouchUpInside];
        [fourBtnView addSubview:button];
        
        [button layoutButtonWithEdgeInsetsStyle:MKButtonEdgeInsetsStyleTop imageTitleSpace:2*SProportion_Height];
        
        [button mas_makeConstraints:^(MASConstraintMaker *make) {
            make.top.and.bottom.equalTo(fourBtnView);
            make.left.mas_equalTo(i*(Screen_Width/(titles.count)));
            make.size.mas_equalTo(CGSizeMake(Screen_Width/(titles.count), 70*SProportion_Height));
        }];
        
        UILabel *label = [[UILabel alloc] init];
        label.text = titles[i];
        label.textColor = Dark_TextColor;
        label.font = [UIFont systemFontOfSize:14];
        label.adjustsFontSizeToFitWidth = YES;
        label.textAlignment = NSTextAlignmentCenter;
        [button addSubview:label];
        
        [label mas_makeConstraints:^(MASConstraintMaker *make) {
            make.bottom.equalTo(fourBtnView.mas_bottom).offset(-4*SProportion_Height);
            make.left.equalTo(button);
            make.size.mas_equalTo(CGSizeMake(Screen_Width/(titles.count), 15*SProportion_Height));
        }];
    }
    //推荐文字
    UIButton *recommendLabel = [UIButton buttonWithType:UIButtonTypeCustom];
    recommendLabel.tag = 1000;
    [recommendLabel setBackgroundColor:[UIColor whiteColor]];
    [recommendLabel setImage:image(@"home_img_ diamond") forState:UIControlStateNormal];
    [recommendLabel setTitle:@"每日精选·实时更新" forState:UIControlStateNormal];
    [recommendLabel setTitleColor:Red_Color forState:UIControlStateNormal];
    recommendLabel.titleLabel.font = font(14);
    [self.scrollView addSubview:recommendLabel];
    
    [recommendLabel layoutButtonWithEdgeInsetsStyle:MKButtonEdgeInsetsStyleLeft imageTitleSpace:5];
    
    [recommendLabel mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.right.equalTo(weakSelf.view);
        make.top.equalTo(fourBtnView.mas_bottom).mas_offset(1);
        make.height.mas_equalTo(30*SProportion_Height);
    }];
    
    //渐变横条图片
    NSArray *sipesArr = @[@"home_img_gadtSipes_lft", @"home_img_gadtSipes_riht"];
    for (int i = 0 ; i < 2; i ++){
        UIImageView *leftHorImage = [[UIImageView alloc] initWithFrame:CGRectMake(25*SProportion_Width + 200*SProportion_Width*i, 14.5f*SProportion_Height, 65*SProportion_Width, 1)];
        leftHorImage.image = image(sipesArr[i]);
        [recommendLabel addSubview:leftHorImage];
    }
    
    
    
//    UIImageView *recommendImage = [[UIImageView alloc] init];
//    recommendImage.backgroundColor = [UIColor whiteColor];
//    recommendImage.image = image(@"home_img_recommend");
//    [self.scrollView addSubview:recommendImage];
//
//    [recommendImage mas_makeConstraints:^(MASConstraintMaker *make) {
//        make.left.right.equalTo(weakSelf.view);
//        make.top.equalTo(fourBtnView.mas_bottom).mas_offset(1);
//        make.height.mas_equalTo(30*SProportion_Height);
//    }];
    
    //推荐商品列表
//    [self.tableView mas_makeConstraints:^(MASConstraintMaker *make) {
//        make.left.right.equalTo(weakSelf.view);
//        make.top.equalTo(recommendLabel.mas_bottom).mas_offset(1);
//        make.height.mas_equalTo(100*SProportion_Height*self.goodsArray.count);
//    }];
    
    //这里scrollView的contentSize是从整个屏幕的原点开始的 所以要加上导航和tabbar的高度 +2 是 后面对‘每日精选’label上下间距各加了1
//    if (UI_IS_IPHONE_X) {
//        self.scrollView.contentSize = CGSizeMake(Screen_Width, 260*SProportion_Height + 100*self.goodsArray.count*SProportion_Height + 83 + 88 +2);
//    }else{
//        self.scrollView.contentSize = CGSizeMake(Screen_Width, 230*SProportion_Height + 100*self.goodsArray.count*SProportion_Height  +2);
//    }
    
    [Helper isHasNetWork:^(BOOL has) {
        if (has) {
            [self loadingData];
        }else{
            [NetworkErrorView shared].hidden = NO;
            [NetworkErrorView shared].delegate = self;
            [self.view addSubview:[NetworkErrorView shared]];
        }
    }];
    
}

- (void)loadingData{
    
    //创建信号量
    dispatch_semaphore_t semaphore = dispatch_semaphore_create(0);
    //创建全局并行(首先创建并行队列，创建队列组，将队列和需要处理的网络请求分别添加到组中)
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    dispatch_group_t group = dispatch_group_create();
    
    //轮播请求
    dispatch_group_async(group, queue, ^{
        NSLog(@"处理事件A(轮播)");
        
        [HTTPManager getHomeBannerInfo:^(NSString *code, NSString *msg, NSArray *result) {
            
            [self.imagesArray removeAllObjects];
            
            for (HomeBannerModel *model in result) {
                
                [self.imagesArray addObject:model.thumb];
            }
            
            self.bannerArray = (NSMutableArray *)result;

            self.imgScroll.imageURLStringsGroup = self.imagesArray;
        }];
        
        dispatch_semaphore_signal(semaphore);
    });
    
    //推荐列表请求
    dispatch_group_async(group, queue, ^{
        NSLog(@"处理事件B(推荐列表)");
        
        if (_pageNum == 1) {
            [self.goodsArray removeAllObjects];
        }
        
        [HTTPManager getHomeRecommedListInfo:^(NSString *code, NSString *msg, NSArray *result) {
            if (code.intValue == 200) {
                if (result.count != 0) {
//                    for (HomeListModel *model in result) {
//                        [self.goodsArray addObject:model];
//                    }
                    
                    [self.goodsArray addObjectsFromArray:result];
                    
                    [self.tableView reloadData];
                    
                    UIButton *recommendLabel = [self.view viewWithTag:1000];
                    
                    [self.tableView mas_updateConstraints:^(MASConstraintMaker *make) {
                        make.left.right.equalTo(self.view);
                        make.top.equalTo(recommendLabel.mas_bottom).mas_offset(1);
                        make.height.mas_equalTo(90*SProportion_Height*self.goodsArray.count);
                    }];
                    
                    self.scrollView.contentSize = CGSizeMake(Screen_Width, 220*SProportion_Height + 90*self.goodsArray.count*SProportion_Height +2);
                }else{
                    
                    [self.scrollView.mj_footer endRefreshingWithNoMoreData];
                }
            }
            
        } pageNum:_pageNum size:DEFULT_LOAD_NUM];
        
        dispatch_semaphore_signal(semaphore);
    });
    
    //检查版本号
    dispatch_group_async(group, queue, ^{
        NSLog(@"处理事件C(检查版本号)");
        
        
        
        
        
        dispatch_semaphore_signal(semaphore);
    });
    
    dispatch_group_notify(group, queue, ^{
        // 三个请求对应三次信号等待
        dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);
        dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);
        dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);
        NSLog(@"最后处理事件D");
        
        [self.scrollView.mj_header endRefreshing];
        [self.scrollView.mj_footer endRefreshing];
    });
}

#pragma mark - 检查版本更新
- (void)checkVersionUpdate{
    
    [HTTPManager checkAppVersion:^(NSString *code, NSString *msg, id result) {
        if (code.intValue == 200) {
            
            [UserDefaultUtil saveBoolValue:[result[@"mandatory"] boolValue] forKey:IS_MANDATORY];
            
            //=================版本更新 根据appid检测====================
            [[UpdateApp sharedManager] updateWithAPPID:APP_ID withBundleId:nil block:^(NSString *currentVersion, NSString *storeVersion, NSString *openUrl, BOOL isUpdate, NSString *updateContent) {
                if (isUpdate) {
                    [SELUpdateAlert showUpdateAlertWithVersion:storeVersion Description:updateContent update:openUrl];
                }else{
                    
                }
            }];
        }else{
            
//            [XSInfoView showInfo:msg onView:self.view];
        }
    }];
}

#pragma mark - 发送友盟推送设备号
- (void)postUmengDeviceTokenRequest{
    NSString *deviceToken = [UserDefaultUtil valueForKey:UMENGPUSH_DIVICETOKEN];
    if (deviceToken != nil) {
        [HTTPManager postUMengPushDeviceToken:^(NSString *code, NSString *msg, id result) {
            
        } deviceToken:deviceToken];
    }
}

#pragma mark - 处理推送跳转
- (void)pushInfoNotification:(NSNotification *)notification{
    
    //APP没在后台状态 点击消息不走这个方法？
    NSDictionary *dict = [notification userInfo];
    NSLog(@"推送接收信息：%@",dict);
    NSString *type = [dict valueForKey:@"type"];
    if ([type isEqualToString:@"goods"]) {
        
        GoodsDetailViewController *gdvc = [[GoodsDetailViewController alloc] init];
        gdvc.goodsId = [dict valueForKey:@"goodsId"];//1921035
        [self.navigationController pushViewController:gdvc animated:YES];
        
    }else if ([type isEqualToString:@"activity"]){
        
        H5RecordPage *hrp = [[H5RecordPage alloc] init];
        hrp.type = 3;
        hrp.titleString = [dict valueForKey:@"title"];
        hrp.requestUrl = [dict valueForKey:@"webUrl"];
        [self.navigationController pushViewController:hrp animated:YES];
        
    }else if ([type isEqualToString:@"collection"]){
        
        HotSaleViewController *hsvc = [[HotSaleViewController alloc] init];
        hsvc.navTitle = @"精选推送";
        hsvc.type = 1;
        [self.navigationController pushViewController:hsvc animated:YES];
    }
    
//    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"兑换成功" message:[dict valueForKey:@"goodsId"] delegate:self cancelButtonTitle:nil otherButtonTitles:@"好", nil];
//    [alert show];
}

#pragma mark - ReloadNetworkDelegate
- (void)reloadNetwork{
    
    [NetworkErrorView shared].hidden = YES;
    [self loadingData];
}

//上拉刷新数据
- (void)loadNewData{
    _pageNum = 1;
    [self loadingData];
}
- (void)loadMoreData{
    _pageNum ++;
    [self loadingData];
}

#pragma mark - UITableViewDataSource

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return self.goodsArray.count;
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    HomeTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"cell" forIndexPath:indexPath];
    cell.selectionStyle = UITableViewCellSelectionStyleNone;

    HomeListModel *model = self.goodsArray[indexPath.row];
    
    setNetImage(cell.goodsPic, model.thumb, @"home_img_recmdList_plaHolder");
    cell.goodsName.text = model.title;
    cell.goodsOriginalPrice.text = [NSString stringWithFormat:@"原价 ￥%.1f", [model.originalPrice floatValue]];
    cell.goodsPrice.text = [NSString stringWithFormat:@"￥%.1f", [model.price floatValue]];
    cell.couponsPrice.text = [NSString stringWithFormat:@"%@元券", model.promoPrice];
    cell.goodsSales.text = [NSString stringWithFormat:@"月销%@", model.sale];

    return cell;
}

#pragma mark - UITableViewDelegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    
    GoodsDetailViewController *gdvc = [[GoodsDetailViewController alloc] init];
    HomeListModel *model = self.goodsArray[indexPath.row];
    gdvc.goodsId = model.goods_id;
    [self.navigationController pushViewController:gdvc animated:YES];
    
}

#pragma mark - 四个模块跳转
- (void)fourBtnClick:(UIButton *)button{
    
    self.hidesBottomBarWhenPushed = YES;
    
    if (button.tag == 10) {
        //9.9包邮
        PostFreeViewController *pfvc = [[PostFreeViewController alloc] init];
        [self.navigationController pushViewController:pfvc animated:YES];
    }else if (button.tag == 11){
        //榜单
        HotSaleViewController *hsvc = [[HotSaleViewController alloc] init];
        hsvc.navTitle = @"榜单";
        hsvc.type = 0;
        [self.navigationController pushViewController:hsvc animated:YES];
    }else if (button.tag == 12){
        //全网汇总
        AllSummaryViewController *asvc = [[AllSummaryViewController alloc] init];
        [self.navigationController pushViewController:asvc animated:YES];
        
    }else if (button.tag == 13){
        //精选推送
        HotSaleViewController *hsvc = [[HotSaleViewController alloc] init];
        hsvc.navTitle = @"精选推送";
        hsvc.type = 1;
        [self.navigationController pushViewController:hsvc animated:YES];
    }
    
    self.hidesBottomBarWhenPushed = NO;
}

#pragma mark - 轮播跳转
- (void)cycleScrollView:(SDCycleScrollView *)cycleScrollView didSelectItemAtIndex:(NSInteger)index{
    
    HomeBannerModel *model = self.bannerArray[index];
    
    if ([model.type intValue] == 1) {
        //跳转商品详情页
        GoodsDetailViewController *gdvc = [[GoodsDetailViewController alloc] init];
        gdvc.goodsId = model.gid;
        [self.navigationController pushViewController:gdvc animated:YES];
        
    }else if ([model.type intValue] == 2 || [model.type intValue] == 3){
        //活动页或者外链
        H5RecordPage *hrp = [[H5RecordPage alloc] init];
        hrp.titleString = @"";
        hrp.type = 3;
        hrp.requestUrl = model.appleUrl;
        [self.navigationController pushViewController:hrp animated:YES];
    }
}
#pragma mark - lazyLoading
- (UIScrollView *)scrollView{
    if (!_scrollView) {
        //scrollView 的mj_footer是添加在_scrollView.contentSize的最底部的 这里要主要设置好scrollView的高度 和 contentSize
        _scrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, Screen_Height-(UI_IS_IPHONE_X?171:113)-30*SProportion_Height)];
        _scrollView.backgroundColor = BackgroundColor;
//        _scrollView.contentSize = CGSizeMake(Screen_Width, 1500);
//        _scrollView.bounces = NO;
        _scrollView.mj_header = [MJRefreshNormalHeader headerWithRefreshingTarget:self refreshingAction:@selector(loadNewData)];
        _scrollView.mj_footer = [MJRefreshBackNormalFooter footerWithRefreshingTarget:self refreshingAction:@selector(loadMoreData)];
        [self.view addSubview:_scrollView];
    }
    return _scrollView;
}

- (NSMutableArray *)imagesArray{
    if (!_imagesArray) {
        _imagesArray = [[NSMutableArray alloc] init];
    }
    return _imagesArray;
}

- (NSMutableArray *)bannerArray{
    if (!_bannerArray) {
        _bannerArray = [[NSMutableArray alloc] init];
    }
    return _bannerArray;
}

- (NSMutableArray *)goodsArray{
    if (!_goodsArray) {
        _goodsArray = [[NSMutableArray alloc] init];
    }
    return _goodsArray;
}

- (UITableView *)tableView{
    if (!_tableView) {
        _tableView = [[UITableView alloc] init];
        _tableView.backgroundColor = BackgroundColor;
        _tableView.delegate = self;
        _tableView.dataSource = self;
        _tableView.rowHeight = 90*SProportion_Height;
//        _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
        _tableView.scrollEnabled = NO;
        [_tableView registerClass:[HomeTableViewCell class] forCellReuseIdentifier:@"cell"];
        [self.scrollView addSubview:_tableView];
    }
    return _tableView;
}

- (void)dealloc{
    [KNotificationCenter removeObserver:self name:PUSH_POSTINFO object:nil];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
